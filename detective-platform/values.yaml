# Default values for the detective-platform.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Enables monitoring tools like Kafdrop & DGraph Rate
enableMonitoringTools: false

email:
  secretName: email-secret
  # MANDATORY: Email server address needs to be set when installing chart (via local-values.yaml or CLI)
  server:
  # MANDATORY: Email server port needs to be set when installing chart (via local-values.yaml or CLI)
  port:
  # MANDATORY: Email username needs to be set when installing chart (via local-values.yaml or CLI)
  username: detective
  # MANDATORY: Email password needs to be set when installing chart (via local-values.yaml or CLI)
  password:
  # MANDATORY: Email sender address needs to be set when installing chart (via local-values.yaml or CLI)
  fromAddress: provisioning@detective.solutions
  # MANDATORY: Email sender name needs to be set when installing chart (via local-values.yaml or CLI)
  fromName: detective
  # MANDATORY: Email template company name needs to be set when installing chart (via local-values.yaml or CLI)
  templateCompanyName: detective.solutions GmbH
  # MANDATORY: Email template company location needs to be set when installing chart (via local-values.yaml or CLI)
  templateCompanyLocation: Fleher Straße 32 40223 Düsseldorf

ingress:
  # MANDATORY: Domain needs to be set when installing chart (via local-values.yaml or CLI)
  domain:
  name: detective-ingress
  class: nginx
  apiPrefix: /api
  apiVersionPrefixV1: /v1
  tls:
    enabled: true
    issuerName: letsencrypt
    issuerUrl: https://acme-staging-v02.api.letsencrypt.org/directory
    secretName: tls-cert-secret
    acmeEmail: founders@detective.solutions

auth:
  jwtAccessTokenSecretName: jwt-access-token-secret
  # MANDATORY: Access token secret needs to be set when installing chart (via local-values.yaml or CLI)
  jwtAccessTokenSecretValue:
  jwtRefreshTokenSecretName: jwt-refresh-token-secret
  # MANDATORY: Access token secret needs to be set when installing chart (via local-values.yaml or CLI)
  jwtRefreshTokenSecretValue:

payment:
  stripe:
    secretName: stripe-secret
    # MANDATORY: Stripe Secret needs to be set when installing chart (via local-values.yaml or CLI)
    secret: sk_test_51LP6igFQtP5mX26XiMXrS43HdGL1H0OFDzDXeXvejesZrvX9NclhP9bM3qskHgAHvUQfWEgoOVg23Q4nGEYpeCIu008q8IWS6D
    # MANDATORY: Stripe Publishable Key secret needs to be set when installing chart (via local-values.yaml or CLI)
    publishableKey: pk_test_51LP6igFQtP5mX26XvscLF3URsvnkFTbG3AqiKsZXMfToCFZe1JxEt83AusMgQNVdkK7Tjwe3RjyAfnYGIyJmyKIA00s6nutxvP
    # MANDATORY: Stripe Webhook Secret needs to be set when installing chart (via local-values.yaml or CLI)
    webhookSecret: whsec_f0de0d0e5b657b8c3893d2bfadd4227b2f7960345452cd8fcd747406f2943885
    # MANDATORY: Stripe Change Payment Portal secret needs to be set when installing chart (via local-values.yaml or CLI)
    changePaymentPortal: https://billing.stripe.com/p/login/test_6oE7ti0AO1VwcnK5kk

upload:
  secretName: upload-secret

db:
  mariadb:
    secretName: mariadb-secret
    mySqlRootPassword: admin
    mySqlUser: admin
    mySqlPassword: admin
    mySqlDatabase: metastore_db
  minio:
    secretName: minio-secret

image:
  # MANDATORY: Registry token needs to be set when installing chart (via local-values.yaml or CLI)
  registryToken:
  pullSecrets: [name: docker-registry-credentials]
  repository: quay.io/detective.solutions
  pullPolicy: IfNotPresent
  replicaCount: 2
  # Image tags default to the chart's appVersion if empty
  auth:
    tag:
  catalog:
    tag:
  detectiveClient:
    tag:
  masking:
    tag:
  provisioning:
    tag:
  query:
    tag:
  upload:
    tag:
  trinoCoordinator:
    tag:
  versionControl:
    tag:
  websocketGateway:
    tag:

  # Set metadata for third-party images which are not bound to the chart's appVersion
  busybox:
    tag: stable@sha256:f75f3d1a317fc82c793d567de94fc8df2bece37acd5f2bd364a0d91a0d1f3dab
  dgraph:
    tag: v22.0.1@sha256:47a5c3733ff60145f8c72a69a9f398f999826fda02775c6270c10dff82195f50
  kafka:
    version: 3.2.0
    protocolVersion: 3.2
    replicaCount: 3
    logLevel: "INFO"
  kafdrop:
    tag: 3.30.0@sha256:5337c9e0e2dee204bdde53e90cf97001f44fb9e8c3380340436efa844901a3f4
  kafkacat:
    tag: 7.1.4@sha256:9ba74ef2a8a74d42ffe62f79472ed0203db37f744b181c15dde971978b497b8e
  ratel:
    tag: v21.12.0@sha256:f34ac9708541c56dc922b40c537d7b113fead503bd788815da8da0a10a35038f
  redis:
    tag: 2.4.2@sha256:babef3817535d0e81b3da5519219a49e00e02879a3ce752b08c771d2fff49d73
  stripe:
    tag: v1.13.5@sha256:9695151951ce5396b157aa7b7170ce378985786b98c1a97310ccb99fce84ee41
  mariadb:
    tag: 10.9.4@sha256:5834aa3731eda1ab657a3e91370895b3b6fe98b1e720c0b1167877f714345cd3
  hive:
    tag: latest@sha256:b44a186b6dcffafc6a72327aaa5912a5824feecb50718aaf661727ff6aef011b
  minio:
    tag: RELEASE.2023-01-02T09-40-09Z.fips@sha256:d8e897769b9bde54da1e3447a6e268d6161c4e5da2512b02303201a87eacb56f

service:
  auth:
    name: detective-auth-service
    port: 1111
    ingressPath: v1/auth
  catalog:
    name: detective-catalog-service
    port: 3003
    ingressPath: v1/catalog
  detectiveClient:
    name: detective-client-service
    port: 80
  dgraph:
    alphaName: detective-dgraph-alpha-public
    zeroName: detective-dgraph-zero-public
    alphaHttpPort: 8080
    alphaGrpcPort: 9080
    zeroHttpPort: 6080
    zeroGrpcPort: 5080
    ingressPath: graphql
  kafdrop:
    name: detective-kafdrop-service
    port: 9001
  kafka:
    name: detective-kafka-cluster
    fullName: detective-kafka-cluster-kafka-bootstrap
    port1: 9092
    port2: 9093
  provisioning:
    name: detective-provisioning-service
    port: 3004
    ingressPath: v1/provisioning
  upload:
    name: detective-upload-service
    port: 3007
    ingressPath: v1/upload
  ratel:
    name: detective-dgraph-ratel-service
    port: 8000
  redis:
    name: detective-redis-service
    port: 6379
  trinoCoordinator:
    name: detective-trino-coordinator-service
    port: 8083
  mariadb:
    name: detective-mariadb-service
    port: 3306
  hive:
    name: detective-hive-service
    port: 9083
  minio:
    name: detective-minio-service
    port1: 9000
    port2: 9001
    port3: 9090
  websocketGateway:
    name: detective-websocket-gateway-service
    port: 7777
    ingressPath: ws

configMap:
  auth:
    name: auth-podconfig
  dgraph:
    name: dgraph-podconfig
  kafka:
    name: kafka-podconfig
  redis:
    name: redis-podconfig
  trino:
    name: trino-podconfig
  mariadb:
    name: mariadb-podconfig
  hive:
    name: hive-podconfig
    mount:
      name: hive-mount-podconfig
  minio:
    name: minio-podconfig
  upload:
    name: upload-podconfig

nameOverride: ""
fullnameOverride: ""

initContainerStartupDelay: 120

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

resources:
  {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
