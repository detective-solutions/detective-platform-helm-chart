{{- $deploymentName := "detective-version-control" -}}
{{- $initDeploymentName := "init-detective-version-control" -}}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $deploymentName }}
  namespace: {{ .Release.namespace }}
  labels:
    {{- include "detective-platform.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: 1
  {{- end }}
  selector:
    matchLabels:
      app: {{ $deploymentName }}
      {{- include "detective-platform.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        app: {{ $deploymentName }}
        {{- include "detective-platform.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.image.pullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "detective-platform.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ $deploymentName }}
          image: {{ .Values.image.repository }}/version-control-service:{{ .Values.image.versionControl.tag | default .Chart.AppVersion }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          env:
            - name: DGRAPH_SERVICE_NAME
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.configMap.dgraph.name }}
                  key: serviceName
            - name: DGRAPH_PORT
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.configMap.dgraph.name }}
                  key: servicePort
            - name: KAFKA_SERVICE_NAME
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.configMap.kafka.name }}
                  key: serviceName
            - name: KAFKA_PORT
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.configMap.kafka.name }}
                  key: servicePort
      initContainers:
        - name: {{ $initDeploymentName }}
          image: busybox:{{ .Values.image.busybox.tag }}
          command: ['sh', '-c', "until nslookup {{ .Values.service.kafka.fullName}}; do echo waiting for {{ .Values.service.kafka.fullName }}; sleep {{ .Values.initContainerStartupDelay }}; done"]
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
